package ru.job4j.calculate;

import org.junit.Test;

import static org.junit.Assert.*;
import static org.hamcrest.Matchers.is;

public class X2Test {

    @Test
    public void whenBCZero() {
        /* Входные параметры. Их будет 4 штуки */
        int a = 1;
        int b = 1;
        int c = 1;
        int x = 1;
        /* ожидаемое значение. Это всегда одна переменная. */
        int expected = 3;
        /* вызов метода, который хотим проверить. */
        /* Результат вычисления. Это всегда одна переменная. */
        int rsl = X2.calc(a, b, c, x);
        /* сравнение полученного значения с ожидаемым */
        assertThat(rsl, is(expected));


        /* Входные параметры. Их будет 4 штуки */
        a = 0;
        b = 1;
        c = 1;
        x = 1;
        /* ожидаемое значение. Это всегда одна переменная. */
        expected = 2;
        /* вызов метода, который хотим проверить. */
        /* Результат вычисления. Это всегда одна переменная. */
        rsl = X2.calc(a, b, c, x);
        /* сравнение полученного значения с ожидаемым */
        assertThat(rsl, is(expected));

        /* Входные параметры. Их будет 4 штуки */
        a = 1;
        b = 1;
        c = 0;
        x = 1;
        /* ожидаемое значение. Это всегда одна переменная. */
        expected = 2;
        /* вызов метода, который хотим проверить. */
        /* Результат вычисления. Это всегда одна переменная. */
        rsl = X2.calc(a, b, c, x);
        /* сравнение полученного значения с ожидаемым */
        assertThat(rsl, is(expected));

        /* Входные параметры. Их будет 4 штуки */
        a = 1;
        b = 1;
        c = 1;
        x = 0;
        /* ожидаемое значение. Это всегда одна переменная. */
        expected = 1;
        /* вызов метода, который хотим проверить. */
        /* Результат вычисления. Это всегда одна переменная. */
        rsl = X2.calc(a, b, c, x);
        /* сравнение полученного значения с ожидаемым */
        assertThat(rsl, is(expected));
    }
}